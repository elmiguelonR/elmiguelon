% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sentiment_analysis.R
\name{analyze_sentiment}
\alias{analyze_sentiment}
\title{Analyze Sentiment of a Data Frame of Articles}
\usage{
analyze_sentiment(
  articles,
  text_column = "content",
  method = c("openai", "r"),
  delay = 2,
  max_retries = 5
)
}
\arguments{
\item{articles}{A data frame containing the articles.}

\item{text_column}{A character string indicating the name of the column that contains the text to analyze (default: "content").}

\item{method}{A character string specifying which method to use ("openai" or "r").}

\item{delay}{A numeric value specifying the base delay (in seconds) between API calls (default: 2).}

\item{max_retries}{An integer indicating the maximum number of retries for rate limit errors (default: 5).}
}
\value{
The input data frame with added columns: 'sentiment_score' and 'sentiment_label'.
}
\description{
This function applies sentiment analysis to each article in a data frame.
It adds two new columns: 'sentiment_score' and 'sentiment_label'. For the OpenAI method,
it always forces the detailed output (with the 'details' field) by using the detailed prompt.
The function includes error handling and rate limit management with exponential backoff.
If an article fails to be analyzed after the maximum number of retries (default 5), the code stops.
}
\examples{
\dontrun{
articles <- data.frame(
  content = c("Great progress in the project!", "This is terrible news.", "The event was okay."),
  publishedAt = c("2025-03-01T12:00:00Z", "2025-03-02T15:30:00Z", "2025-03-03T09:45:00Z"),
  stringsAsFactors = FALSE
)
analyzed_articles <- analyze_sentiment(articles, text_column = "content", method = "r")
head(analyzed_articles)
}

}
